# This release process looks for ndcli tags and produces releases
# build on the version number.
name: release_ndcli

on:
  push:
    tags:
      - 'ndcli-*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      dimclient: ${{ steps.dimclient.outputs.version }}
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - run: echo "::set-output name=version::$(echo "$_REF" | cut -d'-' -f2-)"
        id: version
        shell: bash
        env:
          _REF: ${{ github.ref }}
      - run: apt-get update
      - run: apt-get install --yes build-essential python3 python3-dnspython bash-completion dh-python python3-setuptools python3-all debhelper devscripts python3-sphinx make git
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: echo "::set-output name=version::$( git tag | grep dimclient | sort | tail -1 | cut -d'-' -f2- )"
        id: dimclient
        shell: bash
      - run: |
          curl --location "https://github.com/${{ github.repository }}/releases/download/dimclient-${_DIMCLIENT}/python3-dimclient_${_DIMCLIENT}_all.deb" > ./python3-dimclient_${_DIMCLIENT}_all.deb
          dpkg -i ./python3-dimclient_${_DIMCLIENT}_all.deb
          apt-get install -fy
        env:
          _DIMCLIENT: ${{ steps.dimclient.outputs.version }}
      - run: python3 gendoc.py > gendoc.txt
        working-directory: ndcli/doc
      - run: sphinx-build -b man doc doc/_build/man
        working-directory: ndcli
      - run: tar --transform="s,^ndcli/,ndcli-${_version}/," -czf "ndcli-src-${_version}.tar.gz" ndcli
        env:
          _version: ${{ steps.version.outputs.version }}
      - uses: actions/upload-artifact@v2
        with:
          name: ndcli-src-${{ steps.version.outputs.version }}.tar.gz
          path: ndcli-src-${{ steps.version.outputs.version }}.tar.gz
      - run: echo "${_version} - ${_dimclient}"
        env:
          _dimclient: ${{ steps.dimclient.outputs.version }}
          _version: ${{ steps.version.outputs.version }}

  el7:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: centos:centos7
      env:
        _VERSION: ${{ needs.build.outputs.version }}
        _DIMCLIENT: ${{ needs.build.outputs.dimclient }}
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - run: /bin/yum install --assumeyes epel-release
      - run: /bin/yum install --assumeyes python36-devel python36 rpm-build python36-dns python36-dateutil
      - run: |
          curl --location "https://github.com/${{ github.repository }}/releases/download/dimclient-${_DIMCLIENT}/python36-dimclient-${_DIMCLIENT}-1.el7.x86_64.rpm" > ./python36-dimclient-${_DIMCLIENT}-1.el7.x86_64.rpm
          rpm -i ./python36-dimclient-${_DIMCLIENT}-1.el7.x86_64.rpm
        shell: sh
      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          path: ~/rpmbuild/SOURCES/
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/ndcli.spec
          Name:    python36-ndcli
          Version: ${_VERSION}
          Release: 1.el7
          Summary: DNS and IP management

          Group: application/system
          License: MIT

          Source0: ndcli-src-%{version}.tar.gz
          BuildRequires: python36-devel
          BuildRequires: python36-dimclient
          BuildRequires: python36-dns
          BuildRequires: python36-dateutil
          Requires: python36-dateutil
          Requires: python36-dimclient
          Requires: python36-dns
          Requires: python36

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %autosetup -p1 -n ndcli-%{version}

          %build
          %py3_build

          %install
          %py3_install
          mkdir -p %{buildroot}%{_sysconfdir}/bash_completion.d
          install -m 644 -T bash_completion.d/ndcli %{buildroot}%{_sysconfdir}/bash_completion.d/ndcli
          mkdir -p %{buildroot}%{_mandir}/man1
          gzip doc/_build/man/ndcli.1
          install -m 644 -T doc/_build/man/ndcli.1.gz %{buildroot}%{_mandir}/man1/ndcli.1.gz

          %files
          %{python3_sitelib}/*
          %{_bindir}/*
          %{_sysconfdir}/bash_completion.d/*
          %{_mandir}/man1/*
          EOF
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/ndcli.spec
      - uses: actions/upload-artifact@v2
        with:
          name: python36-ndcli-${{ needs.build.outputs.version }}-1.el7.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/python36-ndcli-${{ needs.build.outputs.version }}-1.el7.x86_64.rpm

  el8:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: oraclelinux:8
      env:
        _VERSION: ${{ needs.build.outputs.version }}
        _DIMCLIENT: ${{ needs.build.outputs.dimclient }}
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - run: /bin/dnf install --assumeyes epel-release
      - run: /bin/dnf install --assumeyes python3-devel python3 rpm-build python3-dns python3-dateutil
      - run: |
          curl --location "https://github.com/${{ github.repository }}/releases/download/dimclient-${_DIMCLIENT}/python3-dimclient-${_DIMCLIENT}-1.el8.x86_64.rpm" > ./python3-dimclient-${_DIMCLIENT}-1.el8.x86_64.rpm
          rpm -i ./python3-dimclient-${_DIMCLIENT}-1.el8.x86_64.rpm
        shell: sh
      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          path: ~/rpmbuild/SOURCES/
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/ndcli.spec
          Name:    python3-ndcli
          Version: ${_VERSION}
          Release: 1.el8
          Summary: DNS and IP management

          Group: application/system
          License: MIT

          Source0: ndcli-src-%{version}.tar.gz
          BuildRequires: python3-devel
          BuildRequires: python3-dimclient
          BuildRequires: python3-dateutil
          BuildRequires: python3-dns
          Requires: python3-dimclient
          Requires: python3-dateutil
          Requires: python3-dns
          Requires: python3

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %autosetup -p1 -n ndcli-%{version}

          %build
          %py3_build

          %install
          %py3_install
          mkdir -p %{buildroot}%{_sysconfdir}/bash_completion.d
          install -m 644 -T bash_completion.d/ndcli %{buildroot}%{_sysconfdir}/bash_completion.d/ndcli
          mkdir -p %{buildroot}%{_mandir}/man1
          gzip doc/_build/man/ndcli.1
          install -m 644 -T doc/_build/man/ndcli.1.gz %{buildroot}%{_mandir}/man1/ndcli.1.gz

          %files
          %{python3_sitelib}/*
          %{_bindir}/*
          %{_sysconfdir}/bash_completion.d/*
          %{_mandir}/man1/*
          EOF
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/ndcli.spec
      - uses: actions/upload-artifact@v2
        with:
          name: python3-ndcli-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/python3-ndcli-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm

  fedora:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [34,35]
    container:
      image: fedora:${{ matrix.os }}
      env:
        _VERSION: ${{ needs.build.outputs.version }}
        _DIMCLIENT: ${{ needs.build.outputs.dimclient }}
    steps:
      - uses: actions/checkout@v2
      - run: mkdir -p ${HOME}/rpmbuild/SPECS
      - run: mkdir -p ${HOME}/rpmbuild/SOURCES
      - run: /bin/dnf install --assumeyes python3-devel python3 rpm-build python3-dns python3-dateutil curl
      - run: |
          curl --location "https://github.com/${{ github.repository }}/releases/download/dimclient-${_DIMCLIENT}/python3-dimclient-${_DIMCLIENT}-1.fc${{ matrix.os }}.x86_64.rpm" > ./python3-dimclient-${_DIMCLIENT}-1.fc${{ matrix.os }}.x86_64.rpm
          rpm -i ./python3-dimclient-${_DIMCLIENT}-1.fc${{ matrix.os }}.x86_64.rpm
        shell: sh
      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          path: ~/rpmbuild/SOURCES/
      - shell: sh
        run: |
          cat <<EOF > ${HOME}/rpmbuild/SPECS/ndcli.spec
          Name:    python3-ndcli
          Version: ${_VERSION}
          Release: 1.fc${{ matrix.os }}
          Summary: DNS and IP management

          Group: application/system
          License: MIT

          Source0: ndcli-src-%{version}.tar.gz
          BuildRequires: python3-devel
          BuildRequires: python3-dimclient
          BuildRequires: python3-dns
          BuildRequires: python3-dateutil
          Requires: python3-dateutil
          Requires: python3-dimclient
          Requires: python3-dns
          Requires: python3

          # don't strip debug symbols, else it will all come crashing down
          %define debug_package %{nil}
          %define __strip /bin/true

          %description
          DNS and IP management

          %prep
          %autosetup -p1 -n ndcli-%{version}

          %build
          %py3_build

          %install
          %py3_install
          mkdir -p %{buildroot}%{_sysconfdir}/bash_completion.d
          install -m 644 -T bash_completion.d/ndcli %{buildroot}%{_sysconfdir}/bash_completion.d/ndcli
          mkdir -p %{buildroot}%{_mandir}/man1
          gzip doc/_build/man/ndcli.1
          install -m 644 -T doc/_build/man/ndcli.1.gz %{buildroot}%{_mandir}/man1/ndcli.1.gz

          %files
          %{python3_sitelib}/*
          %{_bindir}/*
          %{_sysconfdir}/bash_completion.d/*
          %{_mandir}/man1/*
          EOF
      - run: rpmbuild -ba ${HOME}/rpmbuild/SPECS/ndcli.spec
      - uses: actions/upload-artifact@v2
        with:
          name: python3-ndcli-${{ needs.build.outputs.version }}-1.fc${{ matrix.os }}.x86_64.rpm
          path: ~/rpmbuild/RPMS/x86_64/python3-ndcli-${{ needs.build.outputs.version }}-1.fc${{ matrix.os }}.x86_64.rpm

  debian:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: debian:10
      env:
        _VERSION: ${{ needs.build.outputs.version }}
        _DIMCLIENT: ${{ needs.build.outputs.dimclient }}
    steps:
      - uses: actions/checkout@v2
      - run: apt-get update
      - run: apt-get install --yes build-essential python3 python3-dnspython bash-completion dh-python python3-setuptools python3-all debhelper devscripts python3-sphinx
      - run: |
          curl --location "https://github.com/${{ github.repository }}/releases/download/dimclient-${_DIMCLIENT}/python3-dimclient_${_DIMCLIENT}_all.deb" > ./python3-dimclient_${_DIMCLIENT}_all.deb
          dpkg -i ./python3-dimclient_${_DIMCLIENT}_all.deb
          apt-get install -fy
      - run: python3 gendoc.py > gendoc.txt
        working-directory: ndcli/doc
      - run: sphinx-build -b man doc doc/_build/man
        working-directory: ndcli
      - run: cp -vr packaging/debian/ndcli/* ndcli/
      - run: dch --create --package ndcli --newversion ${{ needs.build.outputs.version }} --distribution unstable 'release update'
        working-directory: ndcli
        env:
          DEBMAIL: unknown <unknown@unknown>
      - run: dpkg-buildpackage -us -uc -b
        working-directory: ndcli
      - uses: actions/upload-artifact@v2
        with:
          name: ndcli_${{ needs.build.outputs.version }}_all.deb
          path: ndcli_${{ needs.build.outputs.version }}_all.deb

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build
      - debian
      - el7
      - el8
      - fedora
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true

      - uses: actions/download-artifact@v2
        with:
          name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: python36-ndcli-${{ needs.build.outputs.version }}-1.el7.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-ndcli-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-ndcli-${{ needs.build.outputs.version }}-1.fc34.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: python3-ndcli-${{ needs.build.outputs.version }}-1.fc35.x86_64.rpm
      - uses: actions/download-artifact@v2
        with:
          name: ndcli_${{ needs.build.outputs.version }}_all.deb

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          asset_name: ndcli-src-${{ needs.build.outputs.version }}.tar.gz
          asset_content_type: application/zip
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ndcli_${{ needs.build.outputs.version }}_all.deb
          asset_name: ndcli_${{ needs.build.outputs.version }}_all.deb
          asset_content_type: application/vnd.debian.binary-package
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python36-ndcli-${{ needs.build.outputs.version }}-1.el7.x86_64.rpm
          asset_name: python36-ndcli-${{ needs.build.outputs.version }}-1.el7.x86_64.rpm
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-ndcli-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          asset_name: python3-ndcli-${{ needs.build.outputs.version }}-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-ndcli-${{ needs.build.outputs.version }}-1.fc34.x86_64.rpm
          asset_name: python3-ndcli-${{ needs.build.outputs.version }}-1.fc34.x86_64.rpm
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: python3-ndcli-${{ needs.build.outputs.version }}-1.fc35.x86_64.rpm
          asset_name: python3-ndcli-${{ needs.build.outputs.version }}-1.fc35.x86_64.rpm
          asset_content_type: application/octet-stream
